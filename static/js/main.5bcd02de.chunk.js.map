{"version":3,"sources":["components/shared/Button/Button.module.scss","components/Card/Card.module.scss","components/EditCardForm/EditCardForm.module.scss","components/shared/Icon/Icon.module.scss","components/shared/Modal/Modal.module.scss","components/Column/Column.module.scss","components/AddCardForm/AddCardForm.module.scss","components/Board/Board.module.scss","redux/cards.ts","components/shared/Icon/Icon.tsx","components/shared/Button/Button.tsx","components/Card/Card.tsx","components/AddCardForm/AddCardForm.tsx","components/shared/Modal/Modal.tsx","components/EditCardForm/EditCardForm.tsx","utils/dnd.ts","components/Column/Column.tsx","components/Board/Board.tsx","App.tsx","serviceWorker.ts","redux/store.ts","index.tsx"],"names":["module","exports","CardsActionTypes","Icon","type","typeToClassMap","close","style","IconClose","add","IconAdd","className","classnames","Button","children","icon","props","primary","ButtonPrimary","secondary","ButtonSecondary","ButtonIconText","ButtonGroup","Card","data","title","onEdit","text","id","column","useDrag","item","prevColumn","collect","monitor","isDragging","drag","classes","CardDragging","CardPlaceholder","isRealCard","ref","data-card","CardInner","CardEditButton","onClick","list","initialState","isLoading","CardsListReducer","state","action","RequestCardsList","ReceiveCardsList","cardsList","payload","UpdateCard","card","index","findIndex","newList","MoveCard","to","currentIndex","cardsInColumn","filter","currentCardAtIndex","globalIndex","newCard","slice","AddCard","AddCardForm","useState","isOpen","setIsOpen","setTitle","dispatch","useDispatch","handleAdd","uuid","value","onChange","e","target","AddFromTextarea","placeholder","autoFocus","disabled","Modal","onClose","ModalOverlay","ModalContent","EditCardForm","onSubmit","localTitle","localText","setText","EditCardFormHeader","EditCardFormText","EditCardFormBottom","updateCard","EditCardFormClose","removePlaceholder","cards","withRouter","name","history","wrapper","useRef","localCards","setLocalCards","params","useParams","lastDragIndex","setLasstDragIndex","useDrop","accept","hover","offset","sourceOffset","Array","from","current","querySelectorAll","forEach","i","rect","getBoundingClientRect","x","left","right","y","top","isInArea","height","isBefore","offsetHeight","getDragIndex","getClientOffset","getSourceClientOffset","newCards","draggingItem","splice","drop","moveCard","isOver","shallow","getItem","some","hasPlaceholder","editingCard","find","editOpen","push","onEditSubmit","useEffect","Column","ColumnHeader","map","key","Board","useSelector","columnsProps","a","DndProvider","backend","Backend","App","component","path","Boolean","window","location","hostname","match","store","createStore","combineReducers","compose","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.5bcd02de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__I-pNN\",\"ButtonSecondary\":\"Button_ButtonSecondary__2k30j\",\"ButtonPrimary\":\"Button_ButtonPrimary__1k2Vr\",\"ButtonIconText\":\"Button_ButtonIconText__3YJtB\",\"ButtonGroup\":\"Button_ButtonGroup__1YJF_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Card\":\"Card_Card__2CixC\",\"CardDragging\":\"Card_CardDragging__1oeDj\",\"CardPlaceholder\":\"Card_CardPlaceholder__14-Ur\",\"CardInner\":\"Card_CardInner__1-qDM\",\"CardEditButton\":\"Card_CardEditButton__3meqN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"EditCardForm\":\"EditCardForm_EditCardForm__XbZ0M\",\"EditCardFormHeader\":\"EditCardForm_EditCardFormHeader__6hNoN\",\"EditCardFormText\":\"EditCardForm_EditCardFormText__2FGDD\",\"EditCardFormClose\":\"EditCardForm_EditCardFormClose__1wJC5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Icon\":\"Icon_Icon__2FSqG\",\"IconClose\":\"Icon_IconClose__bmcJa\",\"IconAdd\":\"Icon_IconAdd__2elKP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ModalOverlay\":\"Modal_ModalOverlay__jXat0\",\"ModalContent\":\"Modal_ModalContent__3qF8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Column\":\"Column_Column__3UGoT\",\"ColumnHeader\":\"Column_ColumnHeader__3n124\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddFromTextarea\":\"AddCardForm_AddFromTextarea__3oOUY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Board\":\"Board_Board__1_Nan\"};","import { Reducer, Action } from 'redux';\r\nimport { findIndex } from 'lodash';\r\n\r\nimport { ICardData } from '@models/ICardData';\r\nimport { ICardsListState } from '@models/ICardsListState';\r\n\r\nconst list: ICardData[] = [{\r\n  title: 'Пример текста карточки',\r\n  text: 'Some text',\r\n  id: \"8324f64b-b8d0-47f3-9502-8cc91680812b\",\r\n  column: 'in_progress'\r\n}, {\r\n  title: 'Пример длинного текста карточки, да такого чтобы он вообще не поместился',\r\n  text: 'Some text',\r\n  id: \"e0c609dd-ccdd-492d-b930-48e98f9c71e0\",\r\n  column: 'in_progress'\r\n}, {\r\n  title: 'Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusm',\r\n  text: 'Some text',\r\n  id: \"e0c609dd-ccdd-492d-b930-rgddxrg\",\r\n  column: 'in_progress'\r\n}, {\r\n  title: ' tempor incididunt ut labore et dolore magna aliqua. ',\r\n  text: 'Some text',\r\n  id: \"e0c609dd-ccdd-492d-b930-w34rw34r\",\r\n  column: 'in_progress'\r\n}, {\r\n  title: 'Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.',\r\n  text: 'Some text',\r\n  id: \"e0c609dd-ccdd-492d-b930-gsergsergser\",\r\n  column: 'in_progress'\r\n}, {\r\n  title: ' Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. ',\r\n  text: 'Some text',\r\n  id: \"e0c609dd-ccdd-492d-b930-23ra34rsrtg\",\r\n  column: 'testing'\r\n}, {\r\n  title: 'Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.',\r\n  text: 'Some text',\r\n  id: \"e0c609dd-ccdd-492d-b930-zergdfver\",\r\n  column: 'testing'\r\n}, {\r\n  title: 'Sed ut perspiciatis unde omnis iste ',\r\n  text: 'Some text',\r\n  id: \"e0c609dd-ccdd-492d-b930-zergezrg\",\r\n  column: 'testing'\r\n}, {\r\n  title: ' natus error sit voluptatem accusantium doloremque laudantium',\r\n  text: 'Some text',\r\n  id: \"e0c609dd-ccdd-492d-b930-zergerg34rg\",\r\n  column: 'testing'\r\n}];\r\n\r\nexport enum CardsActionTypes {\r\n  RequestCardsList = 'REQUEST_CARDS_LIST',\r\n  ReceiveCardsList = 'RECEIVE_CARDS_LIST',\r\n  UpdateCard = 'UPDATE_CARD',\r\n  MoveCard = 'MOVE_CARD',\r\n  AddCard = 'ADD_CARD'\r\n}\r\n\r\nexport interface RequestCardsListAction {\r\n  type: CardsActionTypes.RequestCardsList;\r\n}\r\n\r\nexport interface ReceiveCardsListAction {\r\n  type: CardsActionTypes.ReceiveCardsList;\r\n  payload: ICardData[];\r\n}\r\n\r\nexport interface UpdateCardAction {\r\n  type: CardsActionTypes.UpdateCard;\r\n  payload: ICardData;\r\n}\r\n\r\nexport interface MoveCardAction {\r\n  type: CardsActionTypes.MoveCard;\r\n  payload: {\r\n    id: string;\r\n    to: string;\r\n    index: number;\r\n  };\r\n}\r\n\r\nexport interface AddCardAction {\r\n  type: CardsActionTypes.AddCard;\r\n  payload: ICardData;\r\n}\r\n\r\nexport type CardsAction =\r\n  RequestCardsListAction |\r\n  ReceiveCardsListAction |\r\n  UpdateCardAction |\r\n  MoveCardAction |\r\n  AddCardAction;\r\n\r\nexport const updateCard = (data: ICardData) => (dispatch: Function) => {\r\n  dispatch({\r\n    type: CardsActionTypes.UpdateCard,\r\n    payload: data\r\n  });\r\n};\r\n\r\nexport const moveCard = (id: string, to: string, index: number) => (dispatch: Function) => {\r\n  dispatch({\r\n    type: CardsActionTypes.MoveCard,\r\n    payload: { id, to, index }\r\n  });\r\n};\r\n\r\nexport const addCard = (data: ICardData) => (dispatch: Function) => {\r\n  dispatch({\r\n    type: CardsActionTypes.AddCard,\r\n    payload: data\r\n  });\r\n};\r\n\r\nexport const fetchCardsList = () => async (dispatch: Function) => {\r\n  // Show preloader, request data\r\n  // ...\r\n  // When loaded:\r\n  dispatch({\r\n    type: CardsActionTypes.ReceiveCardsList,\r\n    payload: list\r\n  });\r\n};\r\n\r\nconst initialState: ICardsListState = {\r\n  list: [],\r\n  isLoading: false\r\n};\r\n\r\nconst CardsListReducer: Reducer<ICardsListState> = (\r\n  state: ICardsListState = initialState,\r\n  action: Action\r\n): ICardsListState => {\r\n  const { type } = action as CardsAction;\r\n\r\n  switch (type) {\r\n    case CardsActionTypes.RequestCardsList:\r\n      return {\r\n        isLoading: true,\r\n        list: []\r\n      };\r\n\r\n    case CardsActionTypes.ReceiveCardsList:\r\n      const { payload: cardsList } = action as ReceiveCardsListAction;\r\n      return {\r\n        isLoading: false,\r\n        list: cardsList\r\n      };\r\n\r\n    case CardsActionTypes.UpdateCard: {\r\n      const { payload: card } = action as UpdateCardAction;\r\n      const { list } = state;\r\n      const index: number = findIndex(list, { id: card.id });\r\n      const newList = [...list];\r\n      newList[index] = card;\r\n\r\n      return {\r\n        isLoading: false,\r\n        list: newList\r\n      };\r\n    }\r\n    \r\n    case CardsActionTypes.MoveCard: {\r\n      const { payload: data } = action as MoveCardAction;\r\n      const { id, to, index } = data;\r\n      let { list } = state;\r\n      const currentIndex: number = findIndex(list, { id });\r\n      const card = list[currentIndex];\r\n      list = list.filter((item) => item.id !== id );\r\n      const cardsInColumn = list.filter(({ column }) => column == card.column);\r\n      const currentCardAtIndex = cardsInColumn[index];\r\n      const globalIndex = findIndex(list, { id: currentCardAtIndex.id });\r\n      const newCard = { ...card, column: to };\r\n      const newList = [\r\n        ...list.slice(0, globalIndex),\r\n        newCard,\r\n        ...list.slice(globalIndex)\r\n      ];\r\n\r\n      return {\r\n        isLoading: false,\r\n        list: newList\r\n      };\r\n    }\r\n\r\n    case CardsActionTypes.AddCard: {\r\n      const { payload: card } = action as AddCardAction;\r\n      const { list } = state;\r\n      return {\r\n        isLoading: false,\r\n        list: [...list, { ...card }]\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\nexport default CardsListReducer;","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport style from './Icon.module.scss';\r\n\r\nexport interface IIconProps {\r\n  type: string;\r\n}\r\n\r\nexport const Icon: React.FunctionComponent<IIconProps> = ({\r\n  type\r\n}) => {\r\n  const typeToClassMap: any = {\r\n    close: style.IconClose,\r\n    add: style.IconAdd\r\n  };\r\n  return <span className={classnames(style.Icon, typeToClassMap[type])}></span>;\r\n};","import React from 'react';\r\nimport classnames from 'classnames';\r\n\r\nimport { Icon } from '@components/shared/Icon/Icon';\r\n\r\nimport style from './Button.module.scss';\r\n\r\nexport const Button: React.FunctionComponent<any> = ({\r\n  children,\r\n  type,\r\n  icon,\r\n  ...props\r\n}) => {\r\n  const typeToClassMap: any = {\r\n    primary: style.ButtonPrimary,\r\n    secondary: style.ButtonSecondary\r\n  };\r\n  return <button className={classnames(style.Button, typeToClassMap[type])}\r\n    {...props}\r\n  >\r\n    {icon ?\r\n      <>\r\n        <Icon type={icon} />\r\n        <span className={style.ButtonIconText}>{children}</span>\r\n      </> :\r\n      children\r\n    }\r\n  </button>;\r\n};\r\n\r\nexport const ButtonGroup: React.FunctionComponent<any> = ({\r\n  children,\r\n  ...props\r\n}) => {\r\n  return <div\r\n    className={style.ButtonGroup}\r\n    {...props}\r\n  >\r\n    {children}\r\n  </div>;\r\n};","import React from 'react';\r\nimport classnames from 'classnames';\r\nimport { useDrag } from 'react-dnd'\r\n\r\nimport { Button } from '@components/shared/Button/Button';\r\n\r\nimport { ICardData } from '@models/ICardData';\r\n\r\nimport style from  './Card.module.scss';\r\n\r\ntype ICardProps = ICardData & {\r\n  onEdit: (data: ICardData) => void;\r\n};\r\n\r\nexport const Card: React.FunctionComponent<ICardProps> = (data) => {\r\n  const { title, text, onEdit, id, column, type } = data;\r\n  const [{ isDragging }, drag] = useDrag({\r\n    item: { id, title, type: 'card', prevColumn: column },\r\n    collect: monitor => ({\r\n      isDragging: monitor.isDragging()\r\n    }),\r\n  });\r\n\r\n  const classes = classnames(style.Card, {\r\n    [style.CardDragging]: isDragging,\r\n    [style.CardPlaceholder]: type === 'placeholder'\r\n  });\r\n\r\n  const isRealCard = !isDragging;\r\n\r\n  return <div className={classes} ref={drag} data-card={isRealCard} id={id}>\r\n    <div className={style.CardInner}>\r\n      {title}\r\n    </div>\r\n    <div className={style.CardEditButton}>\r\n      <Button\r\n        onClick={() => onEdit(data)}\r\n      >\r\n        🖉\r\n      </Button>\r\n    </div>\r\n  </div>;\r\n};","import React, { useState } from 'react';\r\nimport { v4 as uuid } from 'uuid';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Button, ButtonGroup } from '@components/shared/Button/Button';\r\n\r\nimport { addCard } from '@redux/cards';\r\n\r\nimport style from './AddCardForm.module.scss';\r\n\r\nexport interface IAddCardFormProps {\r\n  column: string;\r\n}\r\n\r\nexport const AddCardForm: React.FunctionComponent<IAddCardFormProps> = ({\r\n  column\r\n}) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const [title, setTitle] = useState<string>('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleAdd = function () {\r\n    close();\r\n    dispatch(addCard({ title, text: '', id: uuid(), column }));\r\n  };\r\n\r\n  const close = function () {\r\n    setIsOpen(false);\r\n    setTitle('');\r\n  };\r\n\r\n  return <div>\r\n    {isOpen ?\r\n      <div>\r\n        <textarea\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          className={style.AddFromTextarea}\r\n          placeholder=\"Введите текст карточки\"\r\n          autoFocus\r\n        >\r\n        </textarea>\r\n        <div>\r\n          <ButtonGroup>\r\n            <Button\r\n              type=\"primary\"\r\n              onClick={() => handleAdd()}\r\n              disabled={!title}\r\n            >\r\n              Добавить карточку\r\n            </Button>\r\n            <Button\r\n              type=\"secondary\"\r\n              onClick={() => close()}\r\n              icon=\"close\"\r\n            >\r\n              Отмена\r\n            </Button>\r\n          </ButtonGroup>\r\n        </div>\r\n      </div>:\r\n      <Button\r\n        type=\"secondary\"\r\n        onClick={() => setIsOpen(true)}\r\n        icon=\"add\"\r\n      >\r\n        Добавить еще одну карточку\r\n      </Button>\r\n    }\r\n    \r\n  </div>;\r\n};","import React from 'react';\r\n\r\nimport style from './Modal.module.scss';\r\n\r\nexport const Modal: React.FunctionComponent<any> = ({\r\n  children,\r\n  isOpen,\r\n  onClose\r\n}) => {\r\n  return isOpen ? <div\r\n    className={style.Modal}\r\n  >\r\n    <div\r\n      className={style.ModalOverlay}\r\n      onClick={onClose}\r\n    ></div>\r\n    <div className={style.ModalContent}>\r\n      {children}\r\n    </div>\r\n  </div> : null;\r\n};","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { Button } from '@components/shared/Button/Button';\r\n\r\nimport { updateCard } from '@redux/cards';\r\n\r\nimport { ICardData } from '@models/ICardData';\r\n\r\nimport style from './EditCardForm.module.scss';\r\n\r\nexport interface IAddCardFormProps {\r\n  data: ICardData;\r\n  onSubmit: () => void;\r\n}\r\n\r\nexport const EditCardForm: React.FunctionComponent<IAddCardFormProps> = ({\r\n  data, onSubmit\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const { title, text, id, column } = data;\r\n  const [localTitle, setTitle] = useState<string>(title);\r\n  const [localText, setText] = useState<string>(text);\r\n\r\n  const handleSubmit = function () {\r\n    dispatch(updateCard({ title: localTitle, text: localText, id, column }));\r\n    onSubmit();\r\n  };\r\n\r\n  return <div\r\n    className={style.EditCardForm}\r\n  >\r\n    <textarea\r\n      className={style.EditCardFormHeader}\r\n      onChange={(e) => setTitle(e.target.value)}\r\n      value={localTitle}\r\n    ></textarea>\r\n    <textarea\r\n      value={localText}\r\n      onChange={(e) => setText(e.target.value)}\r\n      className={style.EditCardFormText}\r\n    ></textarea>\r\n    <div\r\n      className={style.EditCardFormBottom}\r\n    >\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={handleSubmit}\r\n        disabled={!localTitle}\r\n      >\r\n        Сохранить\r\n      </Button>\r\n    </div>\r\n\r\n    <div className={style.EditCardFormClose}>\r\n      <Button\r\n        onClick={() => onSubmit()}\r\n        icon=\"close\"\r\n      ></Button>\r\n    </div>\r\n  </div>;\r\n};","import { ICardData } from \"@models/ICardData\";\r\n\r\nexport const removePlaceholder = function (cards: ICardData[]): ICardData[] {\r\n  return cards.filter(({ type }) => type !== 'placeholder');\r\n};\r\n\r\nexport const hasPlaceholder = function (cards: ICardData[]): boolean {\r\n  return cards.some(({ type }) => type === 'placeholder');\r\n};\r\n\r\nexport const isInArea = (offset: any, rect: any): boolean => {\r\n  return offset.x >= rect.left && offset.x <= rect.right &&\r\n    offset.y >= rect.top;\r\n};\r\n\r\nexport const isBefore = (offset: any, rect: any, height: number): boolean => {\r\n  return offset.y < rect.top + height / 2;\r\n};\r\n\r\nexport const getDragIndex = function (wrapper: any, offset: any, sourceOffset: any) {\r\n  const cards = Array.from(wrapper.current.querySelectorAll(\r\n    '[data-card=\"true\"]'\r\n  ));\r\n\r\n  let index = 0;\r\n  \r\n  cards.forEach((card: any, i: number) => {\r\n    const rect = card.getBoundingClientRect();\r\n    if (isInArea(offset, rect)) {\r\n      if (isBefore(offset, rect, card.offsetHeight)) {\r\n        index = i;\r\n      } else {\r\n        index = i + 1;\r\n      }\r\n    }\r\n  });\r\n\r\n  return index;\r\n};","import React, { useState, useEffect, useRef } from 'react';\r\nimport { useParams, RouteComponentProps, withRouter } from 'react-router-dom';\r\nimport { useDrop } from 'react-dnd';\r\nimport { useDispatch } from 'react-redux';\r\nimport { find } from 'lodash';\r\n\r\nimport { Card } from '@components/Card/Card';\r\nimport { AddCardForm } from '@components/AddCardForm/AddCardForm';\r\nimport { Modal } from '@components/shared/Modal/Modal';\r\nimport { EditCardForm } from '@components/EditCardForm/EditCardForm';\r\n\r\nimport { getDragIndex, removePlaceholder, hasPlaceholder } from '@utils/dnd';\r\n\r\nimport { ICardData } from '@models/ICardData';\r\n\r\nimport { moveCard } from '@redux/cards';\r\n\r\nimport style from  './Column.module.scss';\r\n\r\nexport interface IColumnProps {\r\n  name: string;\r\n  id: string;\r\n  cards: ICardData[];\r\n}\r\n\r\n\r\nconst ColumnComponent: React.FunctionComponent<RouteComponentProps & IColumnProps> = ({\r\n  name, id, cards, history\r\n}) => {\r\n  const wrapper = useRef(null);\r\n  const [localCards, setLocalCards] = useState(cards);\r\n  const dispatch = useDispatch();\r\n  const params: any = useParams();\r\n\r\n  const [lastDragIndex, setLasstDragIndex] = useState(0);\r\n  const [{ isOver, draggingItem }, drop] = useDrop({\r\n    accept: 'card',\r\n    hover: (item, monitor) => {\r\n      const index = getDragIndex(\r\n        wrapper,\r\n        monitor.getClientOffset(),\r\n        monitor.getSourceClientOffset()\r\n      );\r\n\r\n      // remove placeholder cards and the one being dragged\r\n      // (from the local state only, we don't want to touch the store yet\r\n      // bacause it's temporary data)\r\n      const newCards = [...removePlaceholder(localCards)]\r\n        .filter(({ id }) => id !== draggingItem.id);\r\n\r\n      // add a placeholder card\r\n      newCards.splice(index, 0,\r\n        { title: draggingItem.title, id: 'plid', column: id, text: '', type: 'placeholder' }\r\n      );\r\n      setLocalCards(newCards);\r\n      setLasstDragIndex(index);\r\n    },\r\n    drop: (item: any) => {\r\n      dispatch(moveCard(item.id, id, lastDragIndex));\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver({ shallow: true }),\r\n      draggingItem: monitor.getItem()\r\n    })\r\n  });\r\n\r\n  if (!isOver) {\r\n    if (hasPlaceholder(localCards)) { \r\n      setLocalCards(removePlaceholder(localCards));\r\n    }\r\n  }\r\n\r\n  const editingCard = find(cards, { id: params.id });\r\n  const editOpen = !!editingCard;\r\n  \r\n  const onEdit = function (data: ICardData) {\r\n    history.push(`/${data.id}`);\r\n  };\r\n\r\n  const onEditSubmit = function () {\r\n    history.push(`/`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setLocalCards(cards);\r\n  }, [cards])\r\n\r\n  return <div className={style.Column} ref={wrapper}>\r\n    <div ref={drop}>\r\n      <h2 className={style.ColumnHeader}>{name}</h2>\r\n      {localCards.map((card: ICardData) => {\r\n        return <Card\r\n          {...card}\r\n          onEdit={onEdit}\r\n          key={card.id}\r\n        />;\r\n      })}\r\n\r\n      <AddCardForm column={id} />\r\n      \r\n      <Modal\r\n        isOpen={editOpen}\r\n        onClose={() => onEditSubmit()}\r\n      >\r\n        <EditCardForm\r\n          data={editingCard!}\r\n          onSubmit={onEditSubmit}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  </div>;\r\n};\r\n\r\nexport default withRouter(ColumnComponent);","import React, { useEffect } from 'react';\r\nimport Backend from 'react-dnd-html5-backend'\r\nimport { DndProvider } from 'react-dnd'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Column, { IColumnProps } from '@components/Column/Column';\r\n\r\nimport { fetchCardsList } from '@redux/cards';\r\n\r\nimport { IAppState } from '@models/IAppState';\r\nimport { ICardsListState } from '@models/ICardsListState';\r\n\r\nimport style from './Board.module.scss';\r\n\r\nexport interface IBoardProps {\r\n\r\n}\r\n\r\nexport const Board: React.FunctionComponent<IBoardProps> = () => {\r\n  const dispatch = useDispatch();\r\n  const cards: ICardsListState = useSelector((state: IAppState) =>\r\n    state.cardsList\r\n  );\r\n  \r\n  const columnsProps: IColumnProps[] = [{\r\n    name: 'В работе',\r\n    id: 'in_progress'\r\n  }, {\r\n    name: 'На проверке',\r\n    id: 'testing'\r\n  }, {\r\n    name: 'Выполнено',\r\n    id: 'done'\r\n  }].map((item) => {\r\n    return {\r\n      ...item,\r\n      cards: cards.list.filter(({ column }) => column === item.id)\r\n    };\r\n  });\r\n  \r\n  useEffect(() => {\r\n    dispatch(fetchCardsList());\r\n  }, []);\r\n\r\n\r\n  return <DndProvider backend={Backend}> \r\n    <div className={style.Board}>\r\n      {columnsProps.map((item: IColumnProps) => {  \r\n        return <Column\r\n          {...item}\r\n          key={item.id}\r\n        />\r\n      })}\r\n    </div>\r\n  </DndProvider>;\r\n};","import React from 'react';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { Board } from '@components/Board/Board';\n\nfunction App() {\n  return (\n    <Router>\n      <Route component={Board} path=\"/:id?\" />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport { ICardsListState } from '@models/ICardsListState';\r\nimport { IAppState } from '@models/IAppState';\r\n\r\nimport CardsListReducer from '@redux/cards';\r\n\r\nconst store = createStore(\r\n  combineReducers<IAppState>({\r\n    cardsList: CardsListReducer\r\n  }),\r\n  compose(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport { Provider } from 'react-redux';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport store from '@redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}