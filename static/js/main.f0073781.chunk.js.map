{"version":3,"sources":["redux/users.ts","components/UserCard/UserCard.tsx","components/UsersList.tsx","components/UserForm/UserForm.tsx","App.tsx","serviceWorker.ts","redux/store.ts","index.tsx"],"names":["UsersActionTypes","UserCard","_ref","img","name","phone","jobTitle","office","email","onEdit","onDelete","id","react_default","a","createElement","DocumentCard","type","DocumentCardType","compact","DocumentCardPreview","previewImages","previewImageSrc","width","DocumentCardDetails","DocumentCardTitle","title","concat","shouldTruncate","className","Icon","iconName","Text","IconButton","iconProps","onClick","stackTokens","childrenGap","UsersList","list","Stack","tokens","map","user","UserCard_UserCard_UserCard","Object","assign","key","UserForm","editMode","_ref$data","data","onClose","onSubmit","_useState","useState","objectSpread","_useState2","slicedToArray","localData","setLocalData","_useState3","_useState4","validationErrors","setValidationErrors","onInputChange","event","value","target","replace","partialData","defineProperty","variant","htmlFor","src","alt","onChange","files","length","url","URL","createObjectURL","hidden","TextField","label","required","errorMessage","MaskedTextField","mask","Item","align","styles","root","paddingTop","DefaultButton","text","PrimaryButton","errors","match","validatEmail","validatePhone","validateName","validateJobTitle","getValidationErrors","isEmpty","initialState","isLoading","UsersListReducer","state","arguments","undefined","action","RequestUsersList","ReceiveUsersList","payload","UpdateUser","index","findIndex","newList","toConsumableArray","DeleteUser","filter","item","AddUser","uuid","initializeIcons","dropdownOptions","Boolean","window","location","hostname","store","createStore","combineReducers","usersList","compose","applyMiddleware","thunk","mergeStyles","selectors",":global(body), :global(html), :global(#root)","margin","padding","height","ReactDOM","render","Customizer","FluentCustomizations","es","dispatch","useDispatch","useSelector","isAddModalOpen","setAddModalOpen","isEditModalOpen","setEditModalOpen","_useState5","_useState6","editingItemId","setEditingItemId","_useState7","_useState8","sortingOrder","setSortingOrder","useEffect","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","stop","_x","apply","this","style","horizontal","verticalAlign","Dropdown","selectedKey","options","marginRight","marginBottom","position","top","UsersList_UsersList","listCopy","sort","b","reverse","sortList","deleteUser","Modal","isOpen","onDismiss","UserForm_UserForm_UserForm","addUser","updateUser","find","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f0073781.chunk.js","sourcesContent":["import { Reducer, Action } from 'redux';\r\nimport { findIndex } from 'lodash';\r\nimport uuid from 'uuid';\r\n\r\nimport { IUserData } from '@models/IUserData';\r\n\r\nconst list: IUserData[] = [{\r\n  img: 'http://placekitten.com/200/200',\r\n  name: 'John Dow',\r\n  phone: '12345123456',\r\n  jobTitle: 'javascript developer',\r\n  office: '323B',\r\n  id: '1',\r\n  email: 'somemail@gmail.com'\r\n}, {\r\n  img: 'https://via.placeholder.com/200',\r\n  name: 'Jimi Hendrix',\r\n  phone: '12345123456',\r\n  jobTitle: 'javascript developer',\r\n  office: '323B',\r\n  id: '2',\r\n  email: 'somemail@gmail.com'\r\n}, {\r\n  img: 'http://placekitten.com/200/200',\r\n  name: 'Linus Sebastian',\r\n  phone: '12345123456',\r\n  jobTitle: 'javascript developer',\r\n  office: '323B',\r\n  id: '3',\r\n  email: 'somemail@gmail.com'\r\n}, {\r\n  img: 'http://placekitten.com/200/200',\r\n  name: 'Anna Smith',\r\n  phone: '12345123456',\r\n  jobTitle: 'javascript developer',\r\n  office: '323B',\r\n  id: '4',\r\n  email: 'somemail@gmail.com'\r\n}, {\r\n  img: 'https://via.placeholder.com/200',\r\n  name: 'Zina Ivanova',\r\n  phone: '12345123456',\r\n  jobTitle: 'javascript developer',\r\n  office: '323B',\r\n  id: '5',\r\n  email: 'somemail@gmail.com'\r\n}];\r\n\r\nexport interface IUsersListState {\r\n  isLoading: boolean;\r\n  list: IUserData[];\r\n}\r\n\r\nexport enum UsersActionTypes {\r\n  RequestUsersList = 'REQUEST_USERS_LIST',\r\n  ReceiveUsersList = 'RECEIVE_USERS_LIST',\r\n  UpdateUser = 'UPDATE_USER',\r\n  DeleteUser = 'DELETE_USER',\r\n  AddUser = 'ADD_USER'\r\n}\r\n\r\nexport interface RequestUsersListAction {\r\n  type: UsersActionTypes.RequestUsersList;\r\n}\r\n\r\nexport interface ReceiveUsersListAction {\r\n  type: UsersActionTypes.ReceiveUsersList;\r\n  payload: IUserData[];\r\n}\r\n\r\nexport interface UpdateUserAction {\r\n  type: UsersActionTypes.UpdateUser;\r\n  payload: IUserData;\r\n}\r\n\r\nexport interface DeleteUserAction {\r\n  type: UsersActionTypes.DeleteUser;\r\n  payload: string;\r\n}\r\n\r\nexport interface AddUserAction {\r\n  type: UsersActionTypes.AddUser;\r\n  payload: IUserData;\r\n}\r\n\r\nexport type UsersAction =\r\n  RequestUsersListAction |\r\n  ReceiveUsersListAction |\r\n  UpdateUserAction |\r\n  DeleteUserAction |\r\n  AddUserAction;\r\n\r\nexport const updateUser = (data: IUserData) => (dispatch: Function) => {\r\n  dispatch({\r\n    type: UsersActionTypes.UpdateUser,\r\n    payload: data\r\n  });\r\n};\r\n\r\nexport const deleteUser = (id: string) => (dispatch: Function) => {\r\n  dispatch({\r\n    type: UsersActionTypes.DeleteUser,\r\n    payload: id\r\n  });\r\n};\r\n\r\nexport const addUser = (data: IUserData) => (dispatch: Function) => {\r\n  dispatch({\r\n    type: UsersActionTypes.AddUser,\r\n    payload: data\r\n  });\r\n};\r\n\r\nexport const fetchUsersList = () => async (dispatch: Function) => {\r\n  dispatch({\r\n    type: UsersActionTypes.ReceiveUsersList,\r\n    payload: list\r\n  });\r\n};\r\n\r\nconst initialState: IUsersListState = {\r\n  list: [],\r\n  isLoading: false\r\n};\r\n\r\nconst UsersListReducer: Reducer<IUsersListState> = (\r\n  state: IUsersListState = initialState,\r\n  action: Action\r\n): IUsersListState => {\r\n  const { type } = action as UsersAction;\r\n\r\n  switch (type) {\r\n    case UsersActionTypes.RequestUsersList:\r\n      return {\r\n        isLoading: true,\r\n        list: []\r\n      };\r\n\r\n    case UsersActionTypes.ReceiveUsersList:\r\n      const { payload: usersList } = action as ReceiveUsersListAction;\r\n      return {\r\n        isLoading: false,\r\n        list: usersList\r\n      };\r\n\r\n    case UsersActionTypes.UpdateUser: {\r\n      const { payload: user } = action as UpdateUserAction;\r\n      const { list } = state;\r\n      const index: number = findIndex(list, { id: user.id });\r\n      const newList = [...list];\r\n      newList[index] = user;\r\n\r\n      return {\r\n        isLoading: false,\r\n        list: newList\r\n      };\r\n    }\r\n\r\n    case UsersActionTypes.DeleteUser: {\r\n      const { payload: id } = action as DeleteUserAction;\r\n      const { list } = state;\r\n\r\n      return {\r\n        isLoading: false,\r\n        list: list.filter((item) => item.id !== id)\r\n      };\r\n    }\r\n\r\n    case UsersActionTypes.AddUser: {\r\n      const { payload: user } = action as AddUserAction;\r\n      const { list } = state;\r\n      return {\r\n        isLoading: false,\r\n        list: [...list, { ...user, id: uuid() }]\r\n      };\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n};\r\n\r\nexport default UsersListReducer;","import React from 'react';\r\nimport {\r\n  DocumentCard,\r\n  DocumentCardDetails,\r\n  DocumentCardPreview,\r\n  DocumentCardTitle,\r\n  DocumentCardType,\r\n} from 'office-ui-fabric-react/lib/DocumentCard';\r\nimport { Icon } from 'office-ui-fabric-react/lib/Icon';\r\nimport { IconButton } from 'office-ui-fabric-react';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\n\r\n\r\nimport { IUserData } from '@models/IUserData';\r\n\r\nimport './UserCard.css';\r\n\r\n\r\ntype IUserCardProps = IUserData & {\r\n  onEdit: (id: string) => void;\r\n  onDelete: (id: string) => void;\r\n};\r\n\r\nexport const UserCard: React.FunctionComponent<IUserCardProps> = ({\r\n  img, name, phone, jobTitle, office, email, onEdit, onDelete, id\r\n}) => {\r\n  return <DocumentCard\r\n    type={DocumentCardType.compact}\r\n  >\r\n    <DocumentCardPreview previewImages={[{ previewImageSrc: img, width: 150 }]} />\r\n    <DocumentCardDetails>\r\n      <DocumentCardTitle\r\n        title={`${name}, ${jobTitle}`}\r\n        shouldTruncate={true}\r\n      />\r\n      <div className=\"user-card-additional-info\">\r\n        <Icon iconName=\"phone\" />\r\n        <Text>{phone}</Text>\r\n      </div>\r\n      <div className=\"user-card-additional-info\">\r\n        <Icon iconName=\"mail\" />\r\n        <Text>{email}</Text>\r\n      </div>\r\n      <div className=\"user-card-additional-info\">\r\n        <Icon iconName=\"room\" />\r\n        <Text>{office}</Text>\r\n      </div>\r\n    </DocumentCardDetails>\r\n    <div className=\"user-card-controls\">\r\n      <IconButton\r\n        iconProps={{ iconName: 'edit' }}\r\n        title=\"edit\"\r\n        onClick={() => onEdit(id)}\r\n      />\r\n      <IconButton\r\n        iconProps={{ iconName: 'delete' }}\r\n        title=\"delete\"\r\n        onClick={() => onDelete(id)}\r\n      />\r\n    </div>\r\n  </DocumentCard>;\r\n};","import React from 'react';\r\nimport { Stack, IStackTokens } from 'office-ui-fabric-react/lib/Stack';\r\n\r\nimport { UserCard } from '@components/UserCard/UserCard';\r\nimport { IUserData } from '@models/IUserData';\r\n\r\nexport interface IUsersListProps {\r\n  list: IUserData[];\r\n  onEdit: (id: string) => void;\r\n  onDelete: (id: string) => void;\r\n}\r\n\r\nconst stackTokens: IStackTokens = { childrenGap: 20 };\r\n\r\nexport const UsersList: React.FunctionComponent<IUsersListProps> = ({\r\n  list, onEdit, onDelete\r\n}) => {\r\n  return <Stack tokens={stackTokens}>\r\n    {list.map((user: IUserData) => {\r\n      return <\r\n        UserCard\r\n          {...user}\r\n          key={user.id}\r\n          onEdit={onEdit}\r\n          onDelete={onDelete}\r\n        />;\r\n    })}\r\n  </Stack>;\r\n};","import React, { useState } from 'react';\r\nimport { TextField, MaskedTextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { DefaultButton, PrimaryButton, Stack, IStackItemStyles } from 'office-ui-fabric-react';\r\nimport { isEmpty } from 'lodash';\r\n\r\nimport { IUserData } from '@models/IUserData';\r\n\r\nimport './UserForm.css';\r\n\r\nconst imagePlaceholderUrl = 'https://support.hostgator.com/img/articles/weebly_image_sample.png';\r\n\r\nexport interface IUserFormProps {\r\n  editMode: boolean;\r\n  data?: IUserData;\r\n  onSubmit: (data: any) => void;\r\n  onClose: () => void;\r\n}\r\n\r\nexport const UserForm: React.FunctionComponent<IUserFormProps> = ({\r\n  editMode, data = {} as IUserData, onClose, onSubmit\r\n}) => {\r\n  const [localData, setLocalData] = useState({ ...data });\r\n  const [validationErrors, setValidationErrors] = useState<any>({})\r\n\r\n  const validatePhone = function(phone?: string): boolean {\r\n    if (!phone) {\r\n      return false;\r\n    }\r\n    return phone.length === 11;\r\n  };\r\n\r\n  const validatEmail = function(email?: string): boolean {\r\n    if (!email) {\r\n      return false;\r\n    }\r\n    return !!email.match(/^[^@]+@[^@]+\\.[^@]+$/);\r\n  };\r\n\r\n  const validateName = function(name?: string):boolean {\r\n    return !!name;\r\n  };\r\n\r\n  const validateJobTitle = function(jobTitle?: string):boolean {\r\n    return !!jobTitle;\r\n  };\r\n\r\n  const getValidationErrors = function() {\r\n    const errors = {} as any;\r\n    const { email, phone, name, jobTitle } = localData;\r\n    if (!validatEmail(email)) {\r\n      errors.email = 'Invalid email';\r\n    }\r\n    if (!validatePhone(phone)) {\r\n      errors.phone = 'Invalid phone number';\r\n    }\r\n    if (!validateName(name)) {\r\n      errors.name = 'Name is required';\r\n    }\r\n    if (!validateJobTitle(jobTitle)) {\r\n      errors.jobTitle = 'Job title is required';\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = function () {\r\n    const errors = getValidationErrors();\r\n    setValidationErrors(errors);\r\n    if (!isEmpty(errors)) {\r\n      return;\r\n    }\r\n    onSubmit(localData);\r\n  };\r\n\r\n  const onInputChange = function (event: any, value?: string) {\r\n    const name: string = event.target.name;\r\n    if (name === 'phone' && value) {\r\n      value = value.replace(/\\D/g, '');\r\n    }\r\n    const partialData: Partial<IUserData> = {\r\n      [name]: value\r\n    };\r\n    setLocalData({ ...localData, ...partialData });\r\n  }\r\n\r\n  const onFileChange = function (event: any) {\r\n    const files = event.target.files;\r\n    if (!files.length) {\r\n      return;\r\n    }\r\n    const url = URL.createObjectURL(files[0]);\r\n    setLocalData({ ...localData, ...{ img: url } });\r\n    event.target.value = '';\r\n  };\r\n\r\n  return <div className=\"user-form-wrapper\">\r\n    <Text variant=\"large\">\r\n      {editMode ? \"Edit user\" : \"Add user\"}\r\n    </Text>\r\n    \r\n    <label htmlFor=\"file-input\" className=\"user-form-file-label\">\r\n      <img src={localData.img || imagePlaceholderUrl} alt=\"\" />\r\n    </label>\r\n    <input type=\"file\" id=\"file-input\" onChange={onFileChange} hidden />\r\n\r\n    <TextField\r\n      label=\"Name\"\r\n      required\r\n      value={localData.name}\r\n      errorMessage={validationErrors.name}\r\n      name=\"name\"\r\n      onChange={onInputChange}\r\n    />\r\n    <TextField\r\n      label=\"Job title\"\r\n      required\r\n      value={localData.jobTitle}\r\n      errorMessage={validationErrors.jobTitle}\r\n      name=\"jobTitle\"\r\n      onChange={onInputChange}\r\n    />\r\n    <TextField\r\n      label=\"Email\"\r\n      required\r\n      value={localData.email}\r\n      errorMessage={validationErrors.email}\r\n      name=\"email\"\r\n      onChange={onInputChange}\r\n    />\r\n    <MaskedTextField\r\n      label=\"Phone\"\r\n      mask=\"+9 (999) 999 99 99\"\r\n      value={localData.phone}\r\n      errorMessage={validationErrors.phone}\r\n      name=\"phone\"\r\n      onChange={onInputChange}\r\n    />\r\n    <TextField\r\n      label=\"Office\"\r\n      value={localData.office}\r\n      name=\"office\"\r\n      onChange={onInputChange}\r\n    />\r\n    <Stack>\r\n      <Stack.Item\r\n        align=\"end\"\r\n        styles={{ root: { paddingTop: 15 } } as IStackItemStyles}\r\n      >\r\n        <DefaultButton text=\"Close\" onClick={onClose} />\r\n        <PrimaryButton text=\"Submit\" onClick={handleSubmit} />\r\n      </Stack.Item>\r\n    </Stack>\r\n  </div>;\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { initializeIcons } from '@uifabric/icons';\r\nimport { Modal } from 'office-ui-fabric-react';\r\nimport { DefaultButton, Stack } from 'office-ui-fabric-react';\r\nimport { Dropdown, IDropdownOption } from 'office-ui-fabric-react/lib/Dropdown';\r\nimport { find } from 'lodash';\r\n\r\nimport { UsersList } from '@components/UsersList';\r\nimport { UserForm } from '@components/UserForm/UserForm';\r\nimport { IUserData } from '@models/IUserData';\r\nimport { IAppState } from '@redux/store';\r\nimport { IUsersListState } from '@redux/users';\r\nimport {\r\n  fetchUsersList, updateUser, deleteUser, addUser\r\n} from '@redux/users';\r\n\r\ninitializeIcons();\r\n\r\nconst dropdownOptions: IDropdownOption[] = [{\r\n  key: 'name_asc', text: 'Name ↓'\r\n}, {\r\n  key: 'name_desc', text: 'Name ↑'\r\n}, {\r\n  key: 'default', text: 'Default'\r\n}];\r\n\r\nexport const App: React.FunctionComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const usersList: IUsersListState = useSelector((state: IAppState) =>\r\n    state.usersList\r\n  );\r\n  const [isAddModalOpen, setAddModalOpen] = useState(false);\r\n  const [isEditModalOpen, setEditModalOpen] = useState(false);\r\n  const [editingItemId, setEditingItemId] = useState<string|null>(null);\r\n  const [sortingOrder, setSortingOrder] = useState<string|number>('default');\r\n\r\n  const onEdit = function (id: string) {\r\n    setEditModalOpen(true);\r\n    setEditingItemId(id);\r\n  };\r\n\r\n  const onEditSubmit = function (data: IUserData) {\r\n    dispatch(updateUser(data));\r\n    setEditModalOpen(false);\r\n  };\r\n\r\n  const onDelete = function (id: string) {\r\n    dispatch(deleteUser(id));\r\n  };\r\n\r\n  const onAdd = function () {\r\n    setAddModalOpen(true);\r\n  };\r\n\r\n  const onAddSubmit = function (data: IUserData) {\r\n    dispatch(addUser(data));\r\n    setAddModalOpen(false);\r\n  };\r\n\r\n  const sortList = function (list: IUserData[]) {\r\n    const listCopy = [...list];\r\n    if (sortingOrder === 'default') {\r\n      return listCopy;\r\n    }\r\n    listCopy.sort((a, b) => {\r\n      return a.name > b.name ? 1 : -1;\r\n    });\r\n    if (sortingOrder === 'name_asc') {\r\n      return listCopy;\r\n    } else {\r\n      return listCopy.reverse();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchUsersList());\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ width: 500, margin: '0 auto' }}>\r\n      <Stack horizontal verticalAlign=\"center\">\r\n        <Stack.Item>\r\n          <Dropdown\r\n            label=\"Sort users\"\r\n            selectedKey={sortingOrder}\r\n            options={dropdownOptions}\r\n            onChange={(event: any, value?: IDropdownOption) => {\r\n              if (!value) {\r\n                setSortingOrder('default');\r\n              } else {\r\n                setSortingOrder(value.key);\r\n              }\r\n            }}\r\n            styles={{ root: { width: 200, marginRight: 20, marginBottom: 20 } }}\r\n          />\r\n        </Stack.Item>\r\n        <Stack.Item styles={{ root: { position: 'relative', top: 4 } }}>\r\n          <DefaultButton\r\n            text=\"Add user\"\r\n            onClick={onAdd}\r\n            iconProps={{ iconName: 'add' }}\r\n          />\r\n        </Stack.Item>\r\n      </Stack>\r\n      <UsersList\r\n        list={sortList(usersList.list)}\r\n        onEdit={onEdit}\r\n        onDelete={onDelete}\r\n      />\r\n\r\n      <Modal\r\n        isOpen={isAddModalOpen}\r\n        onDismiss={() => setAddModalOpen(false)}\r\n      >\r\n        <UserForm\r\n          onSubmit={onAddSubmit}\r\n          editMode={false}\r\n          onClose={() => setAddModalOpen(false)}\r\n        />\r\n      </Modal>\r\n      \r\n      <Modal\r\n        isOpen={isEditModalOpen}\r\n        onDismiss={() => setEditModalOpen(false)}\r\n      >\r\n        <UserForm\r\n          onSubmit={onEditSubmit}\r\n          editMode={true}\r\n          onClose={() => setEditModalOpen(false)}\r\n          data={find(usersList.list, (item) => item.id === editingItemId)}\r\n        />\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport UsersListReducer, { IUsersListState } from '@redux/users';\r\n\r\nexport interface IAppState {\r\n  usersList: IUsersListState\r\n}\r\n\r\nconst store = createStore(\r\n  combineReducers<IAppState>({\r\n    usersList: UsersListReducer\r\n  }),\r\n  compose(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport { FluentCustomizations } from '@uifabric/fluent-theme';\r\nimport { Customizer, mergeStyles } from 'office-ui-fabric-react';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { Provider } from 'react-redux';\r\n\r\nimport store from '@redux/store';\r\n\r\n// Inject some global styles\r\nmergeStyles({\r\n  selectors: {\r\n    ':global(body), :global(html), :global(#root)': {\r\n      margin: 0,\r\n      padding: 0,\r\n      height: '100vh'\r\n    }\r\n  }\r\n});\r\n\r\nReactDOM.render(\r\n  <Customizer {...FluentCustomizations}>\r\n    <Provider store={store}>\r\n    <App />\r\n    </Provider>\r\n  </Customizer>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}